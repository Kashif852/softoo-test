{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kashif\\\\Desktop\\\\softoo\\\\softoo-test\\\\src\\\\components\\\\Context.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nexport const DataContext = React.createContext();\nexport class DataProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      cart: [],\n      colors: [],\n      allProducts: [],\n      total: 0\n    };\n\n    this.addCart = id => {\n      const {\n        products,\n        cart\n      } = this.state;\n      const check = cart.every(item => {\n        return item._id !== id;\n      });\n\n      if (check) {\n        const data = products.filter(product => {\n          return product._id === id;\n        });\n        this.setState({\n          cart: [...cart, ...data]\n        });\n      } else {\n        alert(\"The product has been added to cart.\");\n      }\n    };\n\n    this.filterOnColor = color => {\n      if (color !== \"All\") {\n        let temp = [];\n        this.state.allProducts.forEach(product => {\n          if (product.colors === color) {\n            temp.push(product);\n          }\n        });\n        this.setState({\n          products: temp\n        });\n      } else {\n        const temp = this.state.allProducts;\n        this.setState({\n          products: temp\n        });\n      }\n    };\n\n    this.reduction = id => {\n      const {\n        cart\n      } = this.state;\n      cart.forEach(item => {\n        if (item._id === id) {\n          item.count === 1 ? item.count = 1 : item.count -= 1;\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.getTotal();\n    };\n\n    this.increase = id => {\n      const {\n        cart\n      } = this.state;\n      cart.forEach(item => {\n        if (item._id === id) {\n          item.count += 1;\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.getTotal();\n    };\n\n    this.removeProduct = id => {\n      if (window.confirm(\"Do you want to delete this product?\")) {\n        const {\n          cart\n        } = this.state;\n        cart.forEach((item, index) => {\n          if (item._id === id) {\n            cart.splice(index, 1);\n          }\n        });\n        this.setState({\n          cart: cart\n        });\n        this.getTotal();\n      }\n    };\n\n    this.getTotal = () => {\n      const {\n        cart\n      } = this.state;\n      const res = cart.reduce((prev, item) => {\n        return prev + item.price * item.count;\n      }, 0);\n      this.setState({\n        total: res\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('dataCart', JSON.stringify(this.state.cart));\n    localStorage.setItem('dataTotal', JSON.stringify(this.state.total));\n  }\n\n  componentDidMount() {\n    axios.get(\"https://my-json-server.typicode.com/benirvingplt/products/products\").then(res => {\n      const temp1 = res.data.map(item => {\n        return {\n          \"_id\": item.id,\n          \"title\": item.name,\n          \"src\": item.img,\n          \"description\": item.name + \" Description\",\n          \"content\": item.name + \" Content\",\n          \"price\": item.price,\n          \"colors\": item.colour,\n          \"count\": 5\n        };\n      });\n      const temp2 = res.data.map(item => {\n        return {\n          \"colors\": item.colour\n        };\n      });\n      this.setState({\n        products: temp1\n      });\n      this.setState({\n        allProducts: temp1\n      });\n      this.setState({\n        colors: temp2\n      });\n    }).catch(err => alert(JSON.stringify(err))); // alert(\"Component Did mount\")\n\n    const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n\n    if (dataCart !== null) {\n      this.setState({\n        cart: dataCart\n      });\n    }\n\n    const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n\n    if (dataTotal !== null) {\n      this.setState({\n        total: dataTotal\n      });\n    }\n  }\n\n  render() {\n    const {\n      products,\n      cart,\n      total,\n      colors\n    } = this.state;\n    const {\n      addCart,\n      reduction,\n      increase,\n      removeProduct,\n      getTotal,\n      filterOnColor\n    } = this;\n    return /*#__PURE__*/React.createElement(DataContext.Provider, {\n      value: {\n        products,\n        colors,\n        addCart,\n        cart,\n        reduction,\n        increase,\n        removeProduct,\n        total,\n        getTotal,\n        filterOnColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Kashif/Desktop/softoo/softoo-test/src/components/Context.js"],"names":["React","Component","axios","DataContext","createContext","DataProvider","state","products","cart","colors","allProducts","total","addCart","id","check","every","item","_id","data","filter","product","setState","alert","filterOnColor","color","temp","forEach","push","reduction","count","getTotal","increase","removeProduct","window","confirm","index","splice","res","reduce","prev","price","componentDidUpdate","localStorage","setItem","JSON","stringify","componentDidMount","get","then","temp1","map","name","img","colour","temp2","catch","err","dataCart","parse","getItem","dataTotal","render","props","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from \"axios\"\n\nexport const DataContext = React.createContext();\n\nexport class DataProvider extends Component {\n\n    state = {\n        products: [],\n        cart: [],\n        colors: [],\n        allProducts: [],\n        total: 0\n    };\n\n    addCart = (id) =>{\n        const {products, cart} = this.state;\n        const check = cart.every(item =>{\n            return item._id !== id\n        })\n        if(check){\n            const data = products.filter(product =>{\n                return product._id === id\n            })\n            this.setState({cart: [...cart,...data]})\n        }else{\n            alert(\"The product has been added to cart.\")\n        }\n    };\n\n    filterOnColor = (color) =>{\n        if(color!==\"All\"){\n            let temp = []\n        this.state.allProducts.forEach((product)=>{\n            if(product.colors === color){\n                temp.push(product)\n            }\n        })\n        this.setState({products: temp})\n        }else{\n            const temp = this.state.allProducts;\n            this.setState({products: temp})\n        }\n    };\n\n    reduction = id =>{\n        const { cart } = this.state;\n        cart.forEach(item =>{\n            if(item._id === id){\n                item.count === 1 ? item.count = 1 : item.count -=1;\n            }\n        })\n        this.setState({cart: cart});\n        this.getTotal();\n    };\n\n    increase = id =>{\n        const { cart } = this.state;\n        cart.forEach(item =>{\n            if(item._id === id){\n                item.count += 1;\n            }\n        })\n        this.setState({cart: cart});\n        this.getTotal();\n    };\n\n    removeProduct = id =>{\n        if(window.confirm(\"Do you want to delete this product?\")){\n            const {cart} = this.state;\n            cart.forEach((item, index) =>{\n                if(item._id === id){\n                    cart.splice(index, 1)\n                }\n            })\n            this.setState({cart: cart});\n            this.getTotal();\n        }\n       \n    };\n\n    getTotal = ()=>{\n        const{cart} = this.state;\n        const res = cart.reduce((prev, item) => {\n            return prev + (item.price * item.count);\n        },0)\n        this.setState({total: res})\n    };\n    \n    componentDidUpdate(){\n        localStorage.setItem('dataCart', JSON.stringify(this.state.cart))\n        localStorage.setItem('dataTotal', JSON.stringify(this.state.total))\n    };\n\n    componentDidMount(){\n        axios.get(\"https://my-json-server.typicode.com/benirvingplt/products/products\")\n        .then(res => {\n            const temp1 = res.data.map(item=>{\n                return {\n                    \"_id\": item.id,\n                    \"title\": item.name,\n                    \"src\": item.img,\n                    \"description\": item.name+\" Description\",\n                    \"content\": item.name+\" Content\",\n                    \"price\": item.price,\n                    \"colors\": item.colour,\n                    \"count\": 5\n                }\n            })\n\n            const temp2 = res.data.map(item=>{\n                return {\"colors\": item.colour}\n            })\n            this.setState({products: temp1})\n            this.setState({allProducts: temp1})\n            this.setState({colors: temp2})\n        })\n        .catch(err => alert(JSON.stringify(err)))\n        // alert(\"Component Did mount\")\n        const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n        if(dataCart !== null){\n            this.setState({cart: dataCart});\n        }\n        const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n        if(dataTotal !== null){\n            this.setState({total: dataTotal});\n        }\n    }\n   \n\n    render() {\n        const {products, cart,total, colors} = this.state;\n        const {addCart,reduction,increase,removeProduct,getTotal, filterOnColor} = this;\n        return (\n            <DataContext.Provider \n            value={{products, colors,addCart, cart, reduction,increase,removeProduct,total,getTotal, filterOnColor}}>\n                {this.props.children}\n            </DataContext.Provider>\n        )\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}