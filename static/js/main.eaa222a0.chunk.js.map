{"version":3,"sources":["components/svg/bars-solid.svg","components/svg/times-solid.svg","components/svg/shopping-cart-solid.svg","components/Context.js","components/Header.js","components/section/Colors.js","components/section/Products.js","components/section/Details.js","components/section/Cart.js","components/section/Payment.js","components/Section.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DataContext","React","createContext","DataProvider","state","products","cart","colors","allProducts","total","addCart","id","every","item","_id","data","filter","product","setState","alert","filterOnColor","color","temp","forEach","push","reduction","count","getTotal","increase","removeProduct","window","confirm","index","splice","res","reduce","prev","price","localStorage","setItem","JSON","stringify","this","axios","get","then","temp1","map","name","img","colour","temp2","catch","err","dataCart","parse","getItem","dataTotal","Provider","value","props","children","Component","Header","toggle","menuToggle","context","className","onClick","src","Menu","alt","width","to","Close","length","CartIcon","contextType","Colors","style","background","Products","onChange","e","target","key","justifyContent","display","flexDirection","alignItems","height","marginRight","title","description","Details","getProduct","match","params","content","Cart","textAlign","Payment","Section","path","component","exact","App","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.eaa222a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bars-solid.b3f49afd.svg\";","module.exports = __webpack_public_path__ + \"static/media/times-solid.2c5552a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/shopping-cart-solid.8bf1af37.svg\";","import React, { Component } from 'react'\nimport axios from \"axios\"\n\nexport const DataContext = React.createContext();\n\nexport class DataProvider extends Component {\n\n    state = {\n        products: [],\n        cart: [],\n        colors: [],\n        allProducts: [],\n        total: 0\n    };\n\n    addCart = (id) =>{\n        const {products, cart} = this.state;\n        const check = cart.every(item =>{\n            return item._id !== id\n        })\n        if(check){\n            const data = products.filter(product =>{\n                return product._id === id\n            })\n            this.setState({cart: [...cart,...data]})\n        }else{\n            alert(\"The product has been added to cart.\")\n        }\n    };\n\n    filterOnColor = (color) =>{\n        if(color!==\"All\"){\n            let temp = []\n        this.state.allProducts.forEach((product)=>{\n            if(product.colors === color){\n                temp.push(product)\n            }\n        })\n        this.setState({products: temp})\n        }else{\n            const temp = this.state.allProducts;\n            this.setState({products: temp})\n        }\n    };\n\n    reduction = id =>{\n        const { cart } = this.state;\n        cart.forEach(item =>{\n            if(item._id === id){\n                item.count === 1 ? item.count = 1 : item.count -=1;\n            }\n        })\n        this.setState({cart: cart});\n        this.getTotal();\n    };\n\n    increase = id =>{\n        const { cart } = this.state;\n        cart.forEach(item =>{\n            if(item._id === id){\n                item.count += 1;\n            }\n        })\n        this.setState({cart: cart});\n        this.getTotal();\n    };\n\n    removeProduct = id =>{\n        if(window.confirm(\"Do you want to delete this product?\")){\n            const {cart} = this.state;\n            cart.forEach((item, index) =>{\n                if(item._id === id){\n                    cart.splice(index, 1)\n                }\n            })\n            this.setState({cart: cart});\n            this.getTotal();\n        }\n       \n    };\n\n    getTotal = ()=>{\n        const{cart} = this.state;\n        const res = cart.reduce((prev, item) => {\n            return prev + (item.price * item.count);\n        },0)\n        this.setState({total: res})\n    };\n    \n    componentDidUpdate(){\n        localStorage.setItem('dataCart', JSON.stringify(this.state.cart))\n        localStorage.setItem('dataTotal', JSON.stringify(this.state.total))\n    };\n\n    componentDidMount(){\n        axios.get(\"https://my-json-server.typicode.com/benirvingplt/products/products\")\n        .then(res => {\n            const temp1 = res.data.map(item=>{\n                return {\n                    \"_id\": item.id,\n                    \"title\": item.name,\n                    \"src\": item.img,\n                    \"description\": item.name+\" Description\",\n                    \"content\": item.name+\" Content\",\n                    \"price\": item.price,\n                    \"colors\": item.colour,\n                    \"count\": 5\n                }\n            })\n\n            const temp2 = res.data.map(item=>{\n                return {\"colors\": item.colour}\n            })\n            this.setState({products: temp1})\n            this.setState({allProducts: temp1})\n            this.setState({colors: temp2})\n        })\n        .catch(err => alert(JSON.stringify(err)))\n        // alert(\"Component Did mount\")\n        const dataCart = JSON.parse(localStorage.getItem('dataCart'));\n        if(dataCart !== null){\n            this.setState({cart: dataCart});\n        }\n        const dataTotal = JSON.parse(localStorage.getItem('dataTotal'));\n        if(dataTotal !== null){\n            this.setState({total: dataTotal});\n        }\n    }\n   \n\n    render() {\n        const {products, cart,total, colors} = this.state;\n        const {addCart,reduction,increase,removeProduct,getTotal, filterOnColor} = this;\n        return (\n            <DataContext.Provider \n            value={{products, colors,addCart, cart, reduction,increase,removeProduct,total,getTotal, filterOnColor}}>\n                {this.props.children}\n            </DataContext.Provider>\n        )\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport Menu from './svg/bars-solid.svg'\nimport Close from './svg/times-solid.svg'\nimport CartIcon from './svg/shopping-cart-solid.svg'\nimport {Link} from 'react-router-dom'\nimport './css/Header.css'\nimport {DataContext} from './Context'\n\n\n\nexport class Header extends Component {\n    static contextType = DataContext;\n\n    state = {\n        toggle: false\n    }\n\n    menuToggle = () =>{\n        this.setState({toggle: !this.state.toggle})\n    }\n\n\n    render() {\n        const {toggle} = this.state;\n        const {cart} = this.context;\n        return (\n            <header>\n                <div className=\"menu\" onClick={this.menuToggle}>\n                    <img src={Menu} alt=\"\" width=\"20\"/>\n                </div>\n                <div className=\"logo\">\n                    <h1><Link to=\"/\">Softoo</Link></h1>\n                </div>\n                <nav>\n                    <ul className={toggle ? \"toggle\" : \"\"}>\n                        <li><Link to=\"/\">Home</Link></li>\n                        <li><Link to=\"/product\">Product</Link></li>\n                        <li className=\"close\" onClick={this.menuToggle}>\n                            <img src={Close} alt=\"\" width=\"20\"/>\n                        </li>\n                    </ul>\n                    <div className=\"nav-cart\">\n                        <span>{cart.length}</span>\n                        <Link to=\"/cart\">\n                            <img src={CartIcon} alt=\"\" width=\"20\"/>\n                        </Link>\n                    </div>\n                </nav>\n            </header>\n        )\n    }\n}\n\nexport default Header\n","import React, { Component } from 'react'\n\nexport class Colors extends Component {\n    render() {\n        const {colors} = this.props;\n        return (\n            <div className=\"colors\">\n                {\n                    // colors.map((color,index) =>(\n                        <button  style={{background: colors}}></button>\n                    // ))\n                }\n            </div>\n        )\n    }\n}\n\nexport default Colors\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport {DataContext} from '../Context'\nimport '../css/Products.css'\nimport Colors from './Colors';\n\nexport class Products extends Component {\n\n    static contextType = DataContext;\n\n    render() {\n        const {products,addCart, filterOnColor, colors} = this.context;\n        return (\n            <>\n            <h1>filter</h1>\n                <select onChange={(e)=>filterOnColor(e.target.value)}>\n                    <option>All</option>\n                    {\n                        colors.map((product,index) => <option key={index}>{product.colors}</option>)\n                    }\n                </select>\n           \n            <div id=\"product\">\n                \n               {\n                   products.map(product =>(\n                       <div className=\"card\" key={product._id}>\n                           <Link to={`/product/${product._id}`}>\n                               <div className='image-layout'>\n                                <div>\n                                    <img src={product.src} alt=\"\" className='image'/>\n                                </div>\n                               </div>\n                           </Link>\n                           <div className=\"content\">\n                             <div style={{justifyContent: \"flex-start\", display: \"flex\", flexDirection: \"center\", alignItems: \"center\"}}>\n                                <div style={{width: \"25%\", height: \"auto\", marginRight: \"1rem\"}}>\n                                    <p>Colors:</p> \n                                </div>\n                                <div style={{width: \"15%\", height: \"auto\"}}>\n                                    <Colors colors={product.colors}/>\n                                </div>\n                             </div>\n                               <h3>\n                                   <Link to={`/product/${product._id}`}>{product.title}</Link>\n                               </h3>\n                               <span>${product.price}</span>\n                               <p>{product.description}</p>\n                               <button onClick={()=> addCart(product._id)}>Add to cart</button>\n                           </div>\n                       </div>\n                   ))\n               }\n            </div>\n            </>\n        )\n    }\n}\n\nexport default Products\n","import React, { Component } from 'react'\nimport {DataContext} from '../Context'\nimport {Link} from 'react-router-dom'\nimport Colors from './Colors'\nimport '../css/Details.css'\n\n\nexport class Details extends Component {\n    static contextType = DataContext;\n    state = {\n        product: []\n    }\n\n    getProduct = () =>{\n        if(this.props.match.params.id){\n            const res = this.context.products;\n            const data = res.filter(item =>{\n                if(item._id == this.props.match.params.id){\n                    return item\n                }\n            })\n            this.setState({product: data})\n        }\n    };\n\n    componentDidMount(){\n        this.getProduct();\n    }\n\n\n\n    render() {\n        const {product} = this.state;\n        const {addCart} = this.context;\n        return (\n           \n            <>\n                {\n                    product.map(item =>(\n                        <div className=\"details\" key={item._id}>\n                            <img src={item.src} alt=\"\"/>\n                            <div className=\"box\">\n                                <div className=\"row\">\n                                    <h2>{item.title}</h2>\n                                    <span>${item.price}</span>\n                                </div>\n                                <Colors colors={item.colors}/>\n                                <p>{item.description}</p>\n                                <p>{item.content}</p>\n                                <Link to=\"/cart\" className=\"cart\" onClick={() => addCart(item._id)}>\n                                    Add to cart\n                                </Link>\n                            </div>\n                        </div>\n                    ))\n                }\n            </>\n        )\n    }\n}\n\nexport default Details\n","import React, { Component } from 'react'\nimport {DataContext} from '../Context'\nimport {Link} from 'react-router-dom'\nimport Colors from './Colors'\nimport '../css/Details.css'\nimport '../css/Cart.css'\n\nexport class Cart extends Component {\n    static contextType = DataContext;\n\n    componentDidMount(){\n        this.context.getTotal();\n    }\n    \n    render() {\n        const {cart,increase,reduction,removeProduct,total} = this.context;\n        if(cart.length === 0){\n            return <h2 style={{textAlign:\"center\"}}>Nothings Product</h2>\n        }else{\n            return (\n                <>\n                    {\n                        cart.map(item =>(\n                            <div className=\"details cart\" key={item._id}>\n                                <img src={item.src} alt=\"\"/>\n                                <div className=\"box\">\n                                    <div className=\"row\">\n                                        <h2>{item.title}</h2>\n                                        <span>${item.price * item.count}</span>\n                                    </div>\n                                    <Colors colors={item.colors}/>\n                                    <p>{item.description}</p>\n                                    <p>{item.content}</p>\n                                    <div className=\"amount\">\n                                        <button className=\"count\" onClick={() => reduction(item._id)}> - </button>\n                                        <span>{item.count}</span>\n                                        <button className=\"count\" onClick={() => increase(item._id)}> + </button>\n                                    </div>\n                                </div>\n                                <div className=\"delete\" onClick={() => removeProduct(item._id)}>X</div>\n                            </div>\n                        ))\n                    }\n                    <div className=\"total\">\n                        <Link to=\"/payment\">Payment</Link>\n                        <h3>Total: ${total}</h3>\n                    </div>\n                </>\n                )\n            }\n        }\n}\n\nexport default Cart\n","import React, { Component } from 'react'\n\nexport class Payment extends Component {\n    render() {\n        return (\n            <div>\n                <h2 style={{textAlign: \"center\"}}>Payment Component</h2>\n            </div>\n        )\n    }\n}\n\nexport default Payment\n","import React, { Component } from 'react'\nimport Products from './section/Products'\nimport Details from './section/Details'\nimport {Route} from \"react-router-dom\"\nimport Cart from './section/Cart'\nimport Payment from './section/Payment'\n\n\nexport class Section extends Component {\n    render() {\n        return (\n            <section>\n                    <Route path=\"/\" component={Products} exact />\n                    <Route path=\"/product\" component={Products} exact  />\n                    <Route path=\"/product/:id\" component={Details} exact />\n                    <Route path=\"/cart\" component={Cart}  exact/>\n                    <Route path=\"/payment\" component={Payment} exact />\n            </section>\n        )\n    }\n}\n\nexport default Section\n","import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport Header from './components/Header'\nimport Section from './components/Section'\nimport {DataProvider} from './components/Context'\n\n\nclass App extends React.Component{\n  render(){\n    return(\n      <DataProvider>\n        <div className=\"app\">\n          <Router>\n            <Header />\n            <Section />\n          </Router>\n        </div>\n      </DataProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}